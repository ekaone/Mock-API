{"version":3,"sources":["components/UI.js","lib/utils.js","components/Reminders.js","components/About.js","components/App.js","lib/server-final.js","index.js"],"names":["Link","isActive","className","inactiveClassName","activeClassName","to","exact","children","activeFor","location","useLocation","length","find","matcher","matchPath","pathname","path","match","split","isExact","classes","BooleanParam","encode","bool","undefined","decode","history","useHistory","listId","useParams","useState","reminders","setReminders","lists","setLists","error","setError","isAddingReminder","setIsAddingReminder","isSavingReminder","setIsSavingReminder","isAddingList","setIsAddingList","isSavingList","setIsSavingList","newReminderText","setNewReminderText","newListName","setNewListName","useQueryParam","sidebarIsOpen","setSidebarIsOpen","activeList","list","id","useEffect","isCurrent","url","fetch","then","res","json","catch","e","console","hasRenderedRemindersRef","useRef","current","initial","div","animate","width","exit","search","map","key","name","onSubmit","preventDefault","method","body","JSON","stringify","push","finally","autoFocus","value","onChange","target","type","placeholder","data-testid","fill","viewBox","fillRule","d","clipRule","onClick","reminder","i","li","variants","hidden","opacity","y","visible","transition","delay","removed","custom","text","filter","About","href","style","textDecorationColor","App","aboutIsActive","remindersIsActive","Reminders","environment","createServer","serializers","RestSerializer","extend","include","embed","models","Model","hasMany","belongsTo","factories","Factory","withReminders","trait","afterCreate","server","createList","seeds","create","routes","this","get","schema","request","all","params","post","attrs","parse","requestBody","delete","destroy","makeFinalServer","ReactDOM","render","ReactRouterRoute","Route","document","getElementById"],"mappings":"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","file":"static/js/main.a1e368d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Link as ReactRouterLink,\r\n  matchPath,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nexport function Link({\r\n  className = \"\",\r\n  inactiveClassName = \"\",\r\n  activeClassName = \"\",\r\n  to,\r\n  exact = false,\r\n  children,\r\n  activeFor = [],\r\n}) {\r\n  let location = useLocation();\r\n  let isActive;\r\n\r\n  if (activeFor.length > 0) {\r\n    isActive = activeFor.find((matcher) => {\r\n      return matchPath(location.pathname, {\r\n        path: matcher.path,\r\n        exact: matcher.exact,\r\n      });\r\n    });\r\n    // isActive = matchPath(location.path, { path: to.split(\"?\")[0] });\r\n  } else {\r\n    let match = matchPath(location.pathname, { path: to.split(\"?\")[0] });\r\n    isActive = match && (exact ? match.isExact : true);\r\n  }\r\n\r\n  // let urlToMatch = activeFor || to.split(\"?\")[0];\r\n  // let match = useRouteMatch(urlToMatch);\r\n\r\n  // if (activeFor.length > 0) {\r\n  //   isActive = match;\r\n  // } else {\r\n  //   isActive = match && (exact ? match.isExact : true);\r\n  // }\r\n\r\n  let classes = `${className} ${\r\n    isActive ? activeClassName : inactiveClassName\r\n  }`;\r\n\r\n  return (\r\n    <ReactRouterLink className={classes} to={to} exact={exact ? 1 : 0}>\r\n      {children}\r\n    </ReactRouterLink>\r\n  );\r\n}\r\n","/*\r\n  I want a Boolean param that serializes to ?open when true and nothing when false\r\n  use-query-params serializes \"null\" as ?name and \"undefined\" as nothing\r\n*/\r\nexport const BooleanParam = {\r\n  encode: (bool) => (bool ? null : undefined),\r\n  decode: (bool) => bool === null,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"./UI\";\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nimport { useQueryParam } from \"use-query-params\";\r\nimport { BooleanParam } from \"../lib/utils\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nexport default function () {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let { listId } = useParams();\r\n\r\n  let [reminders, setReminders] = useState(null);\r\n  let [lists, setLists] = useState();\r\n  let [error, setError] = useState();\r\n  let [isAddingReminder, setIsAddingReminder] = useState();\r\n  let [isSavingReminder, setIsSavingReminder] = useState();\r\n  let [isAddingList, setIsAddingList] = useState();\r\n  let [isSavingList, setIsSavingList] = useState();\r\n  let [newReminderText, setNewReminderText] = useState(\"\");\r\n  let [newListName, setNewListName] = useState(\"\");\r\n  let [sidebarIsOpen, setSidebarIsOpen] = useQueryParam(\"open\", BooleanParam);\r\n\r\n  let activeList = listId && lists?.find((list) => list.id === listId);\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true;\r\n    setReminders(null);\r\n    let url = listId ? `/api/lists/${listId}/reminders` : `/api/reminders`;\r\n\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (isCurrent) {\r\n          setReminders(json.reminders);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (isCurrent) {\r\n          setError(\"We couldn't load your reminders. Try again soon.\");\r\n          console.error(e);\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      isCurrent = false;\r\n    };\r\n  }, [listId]);\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true;\r\n\r\n    if (sidebarIsOpen) {\r\n      fetch(`/api/lists`)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (isCurrent) {\r\n            setLists(json.lists);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.error(e);\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      isCurrent = false;\r\n    };\r\n  }, [sidebarIsOpen]);\r\n\r\n  function createReminder(e) {\r\n    e.preventDefault();\r\n\r\n    if (!newReminderText) {\r\n      return;\r\n    }\r\n\r\n    setIsSavingReminder(true);\r\n\r\n    fetch(\"/api/reminders\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        text: newReminderText,\r\n        ...(listId && { listId }),\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setNewReminderText(\"\");\r\n        setReminders((reminders) => [...reminders, json.reminder]);\r\n        setIsAddingReminder(false);\r\n      })\r\n      .catch((e) => {\r\n        setError(\"Your Reminder wasn't saved. Try again.\");\r\n        console.error(e);\r\n      })\r\n      .finally(() => {\r\n        setIsSavingReminder(false);\r\n      });\r\n  }\r\n\r\n  function createList(e) {\r\n    e.preventDefault();\r\n\r\n    if (!newListName) {\r\n      return;\r\n    }\r\n\r\n    setIsSavingList(true);\r\n\r\n    fetch(\"/api/lists\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: newListName,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setNewListName(\"\");\r\n        setLists((lists) => [...lists, json.list]);\r\n        setIsAddingList(false);\r\n        history.push(`/${json.list.id}${location.search}`);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Your List wasn't saved. Try again.\");\r\n      })\r\n      .finally(() => {\r\n        setIsSavingList(false);\r\n      });\r\n  }\r\n\r\n  function deleteReminder(id) {\r\n    fetch(`/api/reminders/${id}`, { method: \"DELETE\" });\r\n    setReminders((reminders) =>\r\n      reminders.filter((reminder) => reminder.id !== id)\r\n    );\r\n  }\r\n\r\n  function deleteList() {\r\n    fetch(`/api/lists/${listId}`, { method: \"DELETE\" });\r\n    setLists((lists) => lists?.filter((list) => list.id !== listId));\r\n    history.push(`/${location.search}`);\r\n  }\r\n\r\n  let hasRenderedRemindersRef = useRef(false);\r\n  useEffect(() => {\r\n    if (reminders) {\r\n      hasRenderedRemindersRef.current = true;\r\n    } else {\r\n      hasRenderedRemindersRef.current = false;\r\n    }\r\n  }, [reminders]);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"flex mx-auto overflow-hidden rounded-md shadow-lg\">\r\n        <AnimatePresence initial={false}>\r\n          {sidebarIsOpen && (\r\n            <motion.div\r\n              animate={{ width: 192 }}\r\n              initial={{ width: 0 }}\r\n              exit={{ width: 0 }}\r\n              className=\"flex flex-col bg-cool-gray-800\"\r\n            >\r\n              <div className=\"flex flex-col flex-1 w-48 pt-12 pb-4 bg-cool-gray-800\">\r\n                <div className=\"flex-1\">\r\n                  <div>\r\n                    <Link\r\n                      className=\"flex items-center justify-between px-6 py-2 text-sm font-medium\"\r\n                      activeClassName=\"bg-cool-gray-700 text-white\"\r\n                      inactiveClassName=\"text-cool-gray-400 hover:text-white\"\r\n                      to={`/${location.search}`}\r\n                      exact\r\n                    >\r\n                      <span>All</span>\r\n                    </Link>\r\n\r\n                    {lists?.map((list) => (\r\n                      <Link\r\n                        key={list.id}\r\n                        className=\"flex items-center justify-between px-6 py-2 text-sm font-medium\"\r\n                        activeClassName=\"bg-cool-gray-700 text-white\"\r\n                        inactiveClassName=\"text-cool-gray-400 hover:text-white\"\r\n                        to={`/${list.id}${location.search}`}\r\n                      >\r\n                        <span>{list.name}</span>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {isAddingList && (\r\n                    <form\r\n                      onSubmit={createList}\r\n                      className={`${\r\n                        isSavingList ? \"opacity-50 pointer-events-none\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"relative\">\r\n                        <input\r\n                          autoFocus\r\n                          value={newListName}\r\n                          onChange={(e) => setNewListName(e.target.value)}\r\n                          className=\"block w-full py-2 pl-6 text-sm font-medium text-white border-transparent rounded-none pr-9 focus:shadow-none form-input bg-cool-gray-700\"\r\n                          type=\"text\"\r\n                          placeholder=\"New list...\"\r\n                          data-testid=\"new-list-text\"\r\n                        />\r\n                        <button\r\n                          className=\"absolute inset-y-0 right-0 flex items-center px-3 text-cool-gray-400 hover:text-cool-gray-200\"\r\n                          data-testid=\"save-new-list\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-4 h-4\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 20 20\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                              clipRule=\"evenodd\"\r\n                            ></path>\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  )}\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  <button\r\n                    onClick={() => setIsAddingList(!isAddingList)}\r\n                    className=\"flex items-center mx-6 text-xs text-cool-gray-400 hover:text-white\"\r\n                    data-testid=\"add-list\"\r\n                  >\r\n                    <svg\r\n                      className=\"w-4 h-4 mr-1\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                    >\r\n                      <path\r\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\r\n                        clipRule=\"evenodd\"\r\n                        fillRule=\"evenodd\"\r\n                      ></path>\r\n                    </svg>\r\n                    Add list\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <div className=\"flex flex-1 bg-white w-md\">\r\n          <div className=\"flex items-center w-12 group\">\r\n            <button\r\n              onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\r\n              className=\"hidden w-2 h-10 ml-2 rounded-full bg-cool-gray-200 hover:bg-cool-gray-300 group-hover:block\"\r\n              data-testid=\"toggle-sidebar\"\r\n            ></button>\r\n          </div>\r\n\r\n          <div className=\"flex-1 pt-12 pb-12 pr-12\">\r\n            <div className=\"flex items-center justify-between mb-10\">\r\n              <h1\r\n                className=\"flex items-center justify-between text-3xl font-bold leading-none\"\r\n                data-testid=\"active-list-title\"\r\n              >\r\n                {activeList?.name || \"Reminders\"}\r\n              </h1>\r\n\r\n              <button\r\n                data-testid=\"add-reminder\"\r\n                onClick={() => setIsAddingReminder(!isAddingReminder)}\r\n                className=\"p-2 border border-transparent rounded hover:border-cool-gray-300 text-cool-gray-600\"\r\n              >\r\n                <svg\r\n                  className=\"w-4 h-4\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              {error && (\r\n                <div className=\"fixed bottom-0 right-0 mb-8 mr-8 bg-white border-b-4 border-red-500 rounded-md shadow-xl\">\r\n                  <div className=\"flex p-4 pr-5 rounded-md\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg\r\n                        className=\"w-5 h-5 mr-1 text-red-500\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"\r\n                          clipRule=\"evenodd\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-3\">\r\n                      <h3 className=\"font-medium leading-5 text-red-600 text\">\r\n                        Network error\r\n                      </h3>\r\n                      <div className=\"mt-2 text-sm leading-5\">\r\n                        <p>{error}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {reminders?.length > 0 ? (\r\n                <div>\r\n                  <ul className=\"divide-y divide-cool-gray-100\">\r\n                    <AnimatePresence>\r\n                      {reminders.map((reminder, i) => (\r\n                        <motion.li\r\n                          variants={{\r\n                            hidden: (i) => ({\r\n                              opacity: 0,\r\n                              y: -50 * i,\r\n                            }),\r\n                            visible: (i) => ({\r\n                              opacity: 1,\r\n                              y: 0,\r\n                              transition: {\r\n                                delay: i * 0.025,\r\n                              },\r\n                            }),\r\n                            removed: {\r\n                              opacity: 0,\r\n                            },\r\n                          }}\r\n                          initial={\r\n                            hasRenderedRemindersRef.current\r\n                              ? \"visible\"\r\n                              : \"hidden\"\r\n                          }\r\n                          animate=\"visible\"\r\n                          exit=\"removed\"\r\n                          custom={i}\r\n                          className=\"flex items-center justify-between py-2 group\"\r\n                          key={reminder.id}\r\n                          data-testid=\"reminder\"\r\n                        >\r\n                          <div>\r\n                            {reminder.text}\r\n                            {!listId && reminder.list && (\r\n                              <span\r\n                                className=\"px-2 py-1 ml-3 text-xs font-medium rounded bg-cool-gray-100 text-cool-gray-600\"\r\n                                data-testid=\"list-tag\"\r\n                              >\r\n                                {reminder.list.name}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          <button\r\n                            className=\"flex items-center invisible px-2 py-1 opacity-50 hover:opacity-100 group-hover:visible\"\r\n                            onClick={() => deleteReminder(reminder.id)}\r\n                            data-testid=\"delete-reminder\"\r\n                          >\r\n                            <svg\r\n                              className=\"w-4 h-4\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 20 20\"\r\n                            >\r\n                              <path\r\n                                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                clipRule=\"evenodd\"\r\n                                fillRule=\"evenodd\"\r\n                              ></path>\r\n                            </svg>\r\n                            ️\r\n                          </button>\r\n                        </motion.li>\r\n                      ))}\r\n                    </AnimatePresence>\r\n                  </ul>\r\n                </div>\r\n              ) : reminders ? (\r\n                <p className=\"pt-3 pb-3 font-medium text-cool-gray-400\">\r\n                  All done!\r\n                </p>\r\n              ) : !error ? (\r\n                <p className=\"pt-3 pb-3 font-medium text-cool-gray-400\">\r\n                  Loading...\r\n                </p>\r\n              ) : null}\r\n\r\n              {isAddingReminder && (\r\n                <form\r\n                  onSubmit={createReminder}\r\n                  className={`-mx-3 ${\r\n                    isSavingReminder ? \"opacity-50 pointer-events-none\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div>\r\n                    <div className=\"relative py-1\">\r\n                      <input\r\n                        id=\"email\"\r\n                        autoFocus\r\n                        className=\"block w-full py-2 transition duration-150 ease-in-out border-2 border-transparent focus form-input focus:shadow-none focus:border-blue-300 sm:leading-5\"\r\n                        placeholder=\"New reminder...\"\r\n                        data-testid=\"new-reminder-text\"\r\n                        value={newReminderText}\r\n                        onChange={(e) => setNewReminderText(e.target.value)}\r\n                      />\r\n                      <div className=\"absolute inset-y-0 right-0 flex py-1\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          data-testid=\"save-new-reminder\"\r\n                          className=\"items-center px-4 text-sm text-cool-gray-700 hover:text-cool-gray-400\"\r\n                        >\r\n                          <svg\r\n                            className=\"w-4 h-4\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 20 20\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                              clipRule=\"evenodd\"\r\n                            ></path>\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n\r\n            {listId && (\r\n              <div className=\"mt-20 text-right\">\r\n                <button\r\n                  onClick={deleteList}\r\n                  className=\"px-2 text-sm font-medium text-cool-gray-400 hover:text-cool-gray-600\"\r\n                  data-testid=\"delete-list\"\r\n                >\r\n                  Delete list\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function About() {\r\n  return (\r\n    <div className=\"p-12 bg-white rounded-md shadow-lg overflow-hidden max-w-md mx-auto\">\r\n      <h1 className=\"mb-4 text-3xl font-bold leading-none\">About</h1>\r\n      <p className=\"mt-6\">\r\n        This is the demo app for the{\" \"}\r\n        <a\r\n          className=\"underline\"\r\n          href=\"https://miragejs.com/tutorial\"\r\n          style={{\r\n            textDecorationColor: \"#64748b\",\r\n          }}\r\n        >\r\n          Mirage JS Tutorial\r\n        </a>\r\n        .\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport Reminders from \"./Reminders\";\r\nimport { About } from \"./About\";\r\nimport { Link } from \"./UI\";\r\n\r\nexport default function App() {\r\n  let location = useLocation();\r\n  let aboutIsActive = location.pathname.match(\"/about\");\r\n  let remindersIsActive = !aboutIsActive;\r\n\r\n  return (\r\n    <div className=\"pt-12\">\r\n      <header className=\"max-w-md mx-auto\">\r\n        <nav className=\"mt-4 space-x-5\">\r\n          <Link\r\n            className={`pb-px font-medium text-sm ${\r\n              remindersIsActive\r\n                ? \"text-cool-gray-900 border-b-2 border-cool-gray-600\"\r\n                : \"text-cool-gray-500 hover:text-cool-gray-900\"\r\n            }`}\r\n            to={`/${location.search}`}\r\n          >\r\n            Reminders\r\n          </Link>\r\n          <Link\r\n            className={`pb-px font-medium text-sm ${\r\n              aboutIsActive\r\n                ? \"text-cool-gray-900 border-b-2 border-cool-gray-600\"\r\n                : \"text-cool-gray-500 hover:text-cool-gray-900\"\r\n            }`}\r\n            to={`/about${location.search}`}\r\n          >\r\n            About\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n\r\n      <main className=\"mt-10\">\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/:listId?\" exact>\r\n            <Reminders />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","/*\r\n  This is the final solution for the Tutorial that fully implements the API for the Reminders app.\r\n*/\r\nimport {\r\n  Model,\r\n  hasMany,\r\n  belongsTo,\r\n  RestSerializer,\r\n  createServer,\r\n  Factory,\r\n  trait,\r\n} from \"miragejs\";\r\n\r\nexport default function ({ environment = \"development\" } = {}) {\r\n  return createServer({\r\n    environment,\r\n    serializers: {\r\n      reminder: RestSerializer.extend({\r\n        include: [\"list\"],\r\n        embed: true,\r\n      }),\r\n    },\r\n\r\n    models: {\r\n      list: Model.extend({\r\n        reminders: hasMany(),\r\n      }),\r\n\r\n      reminder: Model.extend({\r\n        list: belongsTo(),\r\n      }),\r\n    },\r\n\r\n    factories: {\r\n      list: Factory.extend({\r\n        name(i) {\r\n          return `List ${i}`;\r\n        },\r\n\r\n        withReminders: trait({\r\n          afterCreate(list, server) {\r\n            if (!list.reminders.length) {\r\n              server.createList(\"reminder\", 5, { list });\r\n            }\r\n          },\r\n        }),\r\n      }),\r\n\r\n      reminder: Factory.extend({\r\n        text(i) {\r\n          return `Reminder ${i}`;\r\n        },\r\n      }),\r\n    },\r\n\r\n    seeds(server) {\r\n      server.create(\"reminder\", { text: \"Walk the dog\" });\r\n      server.create(\"reminder\", { text: \"Take out the trash\" });\r\n      server.create(\"reminder\", { text: \"Work out\" });\r\n\r\n      server.create(\"list\", {\r\n        name: \"Home\",\r\n        reminders: [server.create(\"reminder\", { text: \"Do taxes\" })],\r\n      });\r\n\r\n      server.create(\"list\", {\r\n        name: \"Work\",\r\n        reminders: [server.create(\"reminder\", { text: \"Visit bank\" })],\r\n      });\r\n    },\r\n\r\n    routes() {\r\n      this.get(\"/api/lists\", (schema, request) => {\r\n        return schema.lists.all();\r\n      });\r\n\r\n      this.get(\"/api/lists/:id/reminders\", (schema, request) => {\r\n        let list = schema.lists.find(request.params.id);\r\n\r\n        return list.reminders;\r\n      });\r\n\r\n      this.get(\"/api/reminders\", (schema) => {\r\n        return schema.reminders.all();\r\n      });\r\n\r\n      this.post(\"/api/reminders\", (schema, request) => {\r\n        let attrs = JSON.parse(request.requestBody);\r\n\r\n        return schema.reminders.create(attrs);\r\n      });\r\n\r\n      this.post(\"/api/lists\", (schema, request) => {\r\n        let attrs = JSON.parse(request.requestBody);\r\n\r\n        return schema.lists.create(attrs);\r\n      });\r\n\r\n      this.delete(\"/api/reminders/:id\", (schema, request) => {\r\n        let id = request.params.id;\r\n\r\n        return schema.reminders.find(id).destroy();\r\n      });\r\n\r\n      this.delete(\"/api/lists/:id\", (schema, request) => {\r\n        let id = request.params.id;\r\n        let list = schema.lists.find(id);\r\n\r\n        list.reminders.destroy();\r\n\r\n        return list.destroy();\r\n      });\r\n    },\r\n  });\r\n}\r\n","import \"tailwindcss/tailwind.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { QueryParamProvider } from \"use-query-params\";\r\nimport makeServer from \"./server\";\r\nimport makeFinalServer from \"./lib/server-final\";\r\n\r\nif (\r\n  process.env.NODE_ENV === \"development\" &&\r\n  typeof makeServer === \"function\"\r\n) {\r\n  makeServer(); // For people following the tutorial\r\n} else if (\r\n  process.env.NODE_ENV === \"production\" ||\r\n  process.env.REACT_APP_DEMO\r\n) {\r\n  makeFinalServer(); // For a live demo when deploying to Vercel\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <QueryParamProvider ReactRouterRoute={Route}>\r\n      <App />\r\n    </QueryParamProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}